[build-system]
requires = [
    "scikit-build-core>=0.8.0",
    "pybind11>=2.10.0",
    "cmake>=3.18",
    "ninja"
]
build-backend = "scikit_build_core.build"

[project]
name = "pyba"
version = "0.9.0"
description = "Python Bundle Adjustment and Landmark Tracking for KITTI SFM"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Assistant", email = "assistant@example.com"}
]
maintainers = [
    {name = "Assistant", email = "assistant@example.com"}
]
keywords = ["computer-vision", "sfm", "kitti", "bundle-adjustment", "landmark-tracking", "visual-odometry"]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Visualization",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "opencv-python>=4.5.0",
    "matplotlib>=3.5.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "kornia>=0.6.11",
    #"lightglue @ git+https://github.com/cvg/LightGlue.git",
    "pyceres>=0.0.1; sys_platform != 'win32'",  # Optional dependency, not available on Windows
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]
full = [
    "pyceres>=0.0.1; sys_platform != 'win32'",
]

[project.urls]
Homepage = "https://github.com/yourusername/pyba"
Documentation = "https://github.com/yourusername/pyba#readme"
Repository = "https://github.com/yourusername/pyba.git"
"Bug Tracker" = "https://github.com/yourusername/pyba/issues"

[project.scripts]
kitti-sfm = "pyba.kitti_sfm:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["pyba*"]
exclude = [
    "tests*",
    "test_*",
    "example_*",
    "debug_*",
    "__pycache__*",
    "*.pyc",
    ".git*",
]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.yml", "*.yaml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
    "test_*",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.scikit-build]
minimum-version = "0.8"
build-dir = "build"
wheel.packages = ["pyba"]
cmake.verbose = true
cmake.define.CMAKE_BUILD_TYPE = "Release" 